/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Compilador;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JScrollPane;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Lc Martendal
 */
public class Compilador extends javax.swing.JFrame {
    
    private File arquivo = null;
    /**
     * Creates new form Compilador
     */
    public Compilador() {
        initComponents();
        scrollPane();
        atalhosPorTecla();
        view();
    }
    
    private void view() {
        this.setSize(1500, 800);
        this.setPreferredSize(new Dimension(1500, 800));
        this.setResizable(false);
        
        taEditor.setBorder(new NumberedBorder()); 
        
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
    }
    
    
    private void atalhosPorTecla() {
        JRootPane root = this.getRootPane();
        InputMap im = root.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap am = root.getActionMap();
        
        int mask = Toolkit.getDefaultToolkit().getMenuShortcutKeyMaskEx();
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_N, mask), "novo");
        am.put("novo", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
               btNovo.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_O, mask), "abrir");
        am.put("abrir", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btAbrir.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_S, mask), "salvar");
        am.put("salvar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btSalvar.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_C, mask), "copiar");
        am.put("copiar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btCopiar.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, mask), "colar");
        am.put("colar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btColar.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_X, mask), "recortar");
        am.put("recortar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btRecortar.doClick();
            }
        });
        
        im.put(KeyStroke.getKeyStroke("F7"), "compilar");
        am.put("compilar", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btCompilar.doClick();
            }
        }); 
        
        im.put(KeyStroke.getKeyStroke("F1"), "equipe");
        am.put("equipe", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btEquipe.doClick();
            }
        });         
    }
    
    private void scrollPane() {
        jScrollPane2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taEditor = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        taMensagem = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        btNovo = new javax.swing.JButton();
        btAbrir = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btCopiar = new javax.swing.JButton();
        btColar = new javax.swing.JButton();
        btRecortar = new javax.swing.JButton();
        btCompilar = new javax.swing.JButton();
        btEquipe = new javax.swing.JButton();
        tfBarraStatus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jSplitPane1.setDividerLocation(500);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        taEditor.setColumns(20);
        taEditor.setRows(5);
        jScrollPane2.setViewportView(taEditor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1480, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setTopComponent(jPanel1);

        taMensagem.setEditable(false);
        taMensagem.setColumns(20);
        taMensagem.setRows(5);
        jScrollPane3.setViewportView(taMensagem);

        jSplitPane1.setRightComponent(jScrollPane3);

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setRollover(true);

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-novo.png"))); // NOI18N
        btNovo.setText("novo [ctrl-n]");
        btNovo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btNovo.setFocusable(false);
        btNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btNovo.setPreferredSize(new java.awt.Dimension(120, 70));
        btNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btNovo);

        btAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-abrir.png"))); // NOI18N
        btAbrir.setText("abrir [ctrl-o]");
        btAbrir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAbrir.setFocusable(false);
        btAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btAbrir.setPreferredSize(new java.awt.Dimension(120, 70));
        btAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(btAbrir);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-salvar.png"))); // NOI18N
        btSalvar.setText("salvar [ctrl-s]");
        btSalvar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btSalvar.setFocusable(false);
        btSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btSalvar.setPreferredSize(new java.awt.Dimension(120, 70));
        btSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btSalvar);

        btCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-copiar.png"))); // NOI18N
        btCopiar.setText("copiar [ctrl-c]");
        btCopiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCopiar.setFocusable(false);
        btCopiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCopiar.setPreferredSize(new java.awt.Dimension(120, 70));
        btCopiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCopiarActionPerformed(evt);
            }
        });
        jToolBar1.add(btCopiar);

        btColar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-colar.png"))); // NOI18N
        btColar.setText("colar [ctrl-v]");
        btColar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btColar.setFocusable(false);
        btColar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btColar.setPreferredSize(new java.awt.Dimension(120, 70));
        btColar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btColarActionPerformed(evt);
            }
        });
        jToolBar1.add(btColar);

        btRecortar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-cortar.png"))); // NOI18N
        btRecortar.setText("recortar [ctrl-x]");
        btRecortar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btRecortar.setFocusable(false);
        btRecortar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btRecortar.setPreferredSize(new java.awt.Dimension(120, 70));
        btRecortar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRecortarActionPerformed(evt);
            }
        });
        jToolBar1.add(btRecortar);

        btCompilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-compilar.png"))); // NOI18N
        btCompilar.setText("compilar [F7]");
        btCompilar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btCompilar.setFocusable(false);
        btCompilar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btCompilar.setPreferredSize(new java.awt.Dimension(120, 70));
        btCompilar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCompilarActionPerformed(evt);
            }
        });
        jToolBar1.add(btCompilar);

        btEquipe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icone-equipe.png"))); // NOI18N
        btEquipe.setText("equipe [F1]");
        btEquipe.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btEquipe.setFocusable(false);
        btEquipe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEquipe.setPreferredSize(new java.awt.Dimension(120, 70));
        btEquipe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btEquipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEquipeActionPerformed(evt);
            }
        });
        jToolBar1.add(btEquipe);

        tfBarraStatus.setEditable(false);
        tfBarraStatus.setPreferredSize(new java.awt.Dimension(73, 25));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfBarraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(tfBarraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCopiarActionPerformed
        taEditor.copy();
    }//GEN-LAST:event_btCopiarActionPerformed

    private void btEquipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEquipeActionPerformed
        taMensagem.setText("Equipe:\n"
                + "Luiz Carlos Martendal \n"
                + "Lucas Kuhl dos Santos \n" 
                + "Lucas Visconti");
    }//GEN-LAST:event_btEquipeActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        taEditor.setText("");
        taMensagem.setText("");
        tfBarraStatus.setText("");
        this.arquivo = null;
    }//GEN-LAST:event_btNovoActionPerformed

    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Escolha o arquivo..");

        chooser.setFileFilter(new FileNameExtensionFilter("Arquivos de texto (*txt)", "txt"));
        
        int resultado = chooser.showOpenDialog(this);
        
        if(resultado == JFileChooser.APPROVE_OPTION) {
            arquivo = chooser.getSelectedFile();      

            try (BufferedReader br = new BufferedReader(new FileReader(arquivo))) {
                taEditor.setText("");
                String linha;
                
                while ((linha = br.readLine()) != null) {
                    taEditor.append(linha + "\n");
                }
                
                taMensagem.setText("");
                tfBarraStatus.setText(arquivo.getParentFile().getName() + "\\" + this.arquivo.getName());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao ler arquivo: " + ex.getMessage());
            }
        }   
        
        
    }//GEN-LAST:event_btAbrirActionPerformed

    private void btColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btColarActionPerformed
        taEditor.paste();
    }//GEN-LAST:event_btColarActionPerformed

    private void btRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRecortarActionPerformed
        taEditor.cut();
    }//GEN-LAST:event_btRecortarActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            if(arquivo == null){
                JFileChooser chooser = new JFileChooser();
                chooser.setDialogTitle("Salvar arquivo");
                
                chooser.setFileFilter(new FileNameExtensionFilter("Arquivos de texto (*txt)", "txt"));
                
                int res = chooser.showSaveDialog(this);
                
                if(res == JFileChooser.APPROVE_OPTION){
                    arquivo = chooser.getSelectedFile();
                    
                    if (!arquivo.getName().toLowerCase().endsWith(".txt")) {
                        arquivo = new File(arquivo.getAbsolutePath() + ".txt");
                    }
                } else {
                    return;
                }
            }  
            
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(arquivo))){
                bw.write(taEditor.getText());
                
                tfBarraStatus.setText(arquivo.getParentFile().getName() + "\\" + this.arquivo.getName());
                
                taMensagem.setText("");
            }
            
        } catch( Exception e) {
            
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCompilarActionPerformed
        taMensagem.setText("");
        int linha = 1;
        String classe_lexema = "";
        
        Lexico lexico = new Lexico();

        lexico.setInput(taEditor.getText());
        
        try {
            Token t = null;            
            taMensagem.setText("linha              "+"classe                                 "+"lexema\n");
                
            while((t = lexico.nextToken()) != null){  
                if(t.getPosition() > 0){ //fazer até chegar na posição 0, procurando \n
                    int i = 0;
                    int pos = 0;
                    linha = 1;
                    while(true){
                        pos = t.getPosition() - (i++);
                        if(pos == 0){
                            break;
                        }
                        if(taEditor.getText().charAt(pos) == '\n'){
                            linha++;
                        }else;
                    }

                    if(taEditor.getText().charAt(0) == '\n'){
                        linha++;
                    }  
                }
                
                
                if(t.getId() < 6){
                    switch(t.getId()) {
                        case 2:
                            classe_lexema = "id                          ";
                            break;
                        case 3:
                            classe_lexema = "c_int                    ";
                            break;
                        case 4:
                            classe_lexema = "c_float                 ";
                            break;
                        case 5: 
                            classe_lexema = "c_string               ";
                            break;
                    }
                }else if(t.getId() < 29){
                    classe_lexema = "palavra reservada";
                }else{
                    classe_lexema = "simbolo especial ";
                }
                        
                taMensagem.append(linha+"                   " + classe_lexema+"               " + t.getLexeme() + "\n");
            }
            taMensagem.append("programa compilado com sucesso..");    
            
            
        } catch (LexicalError e) {
            char lexComErro = taEditor.getText().charAt(e.getPosition());
            
            if(e.getPosition() > 0){
                    int i = 0;
                    int pos = 0;
                    linha = 1;
                    while(true){
                        pos = e.getPosition() - (i++);
                        if(pos == 0){
                            break;
                        }
                        if(taEditor.getText().charAt(pos) == '\n'){
                            linha++;
                        }else;
                    }

                    if(taEditor.getText().charAt(0) == '\n'){
                        linha++;
                    }  
                }
            if(e.getMessage() == "símbolo inválido"){
                taMensagem.setText("linha " + linha + ": " +  lexComErro + " " +e.getMessage());
            }else{
                taMensagem.setText("linha " + linha + ": " +e.getMessage());
            }
            
             
        }      
        
    }//GEN-LAST:event_btCompilarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compilador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAbrir;
    private javax.swing.JButton btColar;
    private javax.swing.JButton btCompilar;
    private javax.swing.JButton btCopiar;
    private javax.swing.JButton btEquipe;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btRecortar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextArea taEditor;
    private javax.swing.JTextArea taMensagem;
    private javax.swing.JTextField tfBarraStatus;
    // End of variables declaration//GEN-END:variables
}
